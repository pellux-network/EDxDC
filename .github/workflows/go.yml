name: Go Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 0.1.2)"
        required: true
        default: "X.X.X"

jobs:
  build:
    runs-on: windows-latest
    outputs:
      sha: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.4"

      - name: Build Project
        run: go build -ldflags "-H=windowsgui -s -w" -v -o EDxDC-v${{ github.event.inputs.version }}.exe

      - name: Prepare Release Directory
        run: |
          mkdir EDxDC-v${{ github.event.inputs.version }}
          Copy-Item -Path EDxDC-v${{ github.event.inputs.version }}.exe,conf.yaml,LICENSE,README.md,names,bin -Destination .\EDxDC-v${{ github.event.inputs.version }} -Recurse

      - name: Create Release Zip
        run: powershell Compress-Archive -Path .\EDxDC-v${{ github.event.inputs.version }} -DestinationPath .\EDxDC-v${{ github.event.inputs.version }}-portable-amd64.zip

      - name: Upload artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: release-zip
          path: ./EDxDC-v${{ github.event.inputs.version }}-portable-amd64.zip

      - name: Get current commit SHA
        id: get_sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  tag-and-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact from build
        uses: actions/download-artifact@v4
        with:
          name: release-zip

      - name: Delete existing tag and release if present
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ github.event.inputs.version }}"
          # Delete GitHub release if exists
          gh release delete "$TAG" --yes || true
          # Delete remote tag if exists
          git push origin :refs/tags/"$TAG" || true
          # Delete local tag if exists
          git tag -d "$TAG" || true

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.version }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: EDxDC ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          makeLatest: true
          artifacts: ./EDxDC-v${{ github.event.inputs.version }}-portable-amd64.zip